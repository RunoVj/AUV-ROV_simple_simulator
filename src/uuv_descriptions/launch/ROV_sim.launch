<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="world" default="empty"/> 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--arg name="world_name" value="$(find mybot_gazebo)/worlds/mybot.world"/-->
    <!--<arg name="world_name" value="$(find mybot_gazebo)/worlds/turtlebot_playground.world"/>-->
    <!--<arg name="world_name" value="$(find mybot_gazebo)/worlds/singapore.world"/>-->
        <arg name="world_name" value="worlds/auv_underwater_world.world"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
        <arg name="verbose" value="true"/>
  </include>

  
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find mybot_description)/urdf/mybot.xacro'"/>

  <param name="Gates_final" command="$(find xacro)/xacro.py '$(find Gates_final)/urdf/Gates_final.xacro'"/>

  <param name="Swimming_pool_final" command="$(find xacro)/xacro.py '$(find Swimming_pool_final)/urdf/Swimming_pool_final.xacro'"/>

  <param name="Buckets" command="$(find xacro)/xacro.py '$(find Buckets)/urdf/Buckets.xacro'"/>

  <param name="Gates_qualification" command="$(find xacro)/xacro.py '$(find Gates_qualification)/urdf/Gates_qualification.xacro'"/>

  <param name="starting_gates" command="$(find xacro)/xacro.py '$(find starting_gates)/urdf/starting_gates.xacro'"/>

  <param name="ROV_model_full" command="$(find xacro)/xacro.py '$(find ROV_model_full)/urdf/ROV_model_full.xacro'"/> 


  <node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
   args="-urdf -param robot_description -model mybot" />

  <node name="Gates_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -param Gates_final -x 15 -y 10 -z 1 -R 0 -P 0 -Y 1.5 -model Gates_final" />

  <node name="Pool_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -param Swimming_pool_final -x 0 -y 0 -z 0 -R 0 -P 0 -Y 0 -model Swimming_pool_final" />

  <node name="Buckets_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -param Buckets -x 8 -y 4 -z 1 -R 0 -P 0 -Y 0 -model Buckets" />

  <node name="Gates_qualification_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -param Gates_qualification -x 5 -y 5 -z 1 -R 0 -P 0 -Y 0 -model Gates_qualification" />

  <node name="starting_gates_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -param starting_gates -x 10 -y 10 -z 1 -R 0 -P 0 -Y 0 -model starting_gates" />

  <node name="ROV_model_full_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -param ROV_model_full -x 10 -y 10 -z 1 -R 0 -P 0 -Y 0 -model ROV_model_full" />


    <include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>

    <node name="publish_world_models"
        pkg="uuv_assistants"
        type="publish_world_models.py"
        output="screen">
        <rosparam subst_value="true">
          meshes:
              sea_surface:
                  mesh: package://uuv_descriptions/Media/models/sea_surface_1000m_x_1000m.dae
                  model: sea_surface
                  scale: [2, 2, 1]
              sea_bottom:
                  plane: [2000, 2000, 0.1]
                  pose:
                      position: [0, 0, -80]  
              herkules_seabed:
                    mesh: package://uuv_descriptions/world_models/herkules_seabed/meshes/herkules_seabed.dae
                    pose:
                      position: [0, 0, -60]
                    scale: [4, 4, 1]            
        </rosparam>
    </node>

    <group if="$(arg set_timeout)">
        <include file="$(find uuv_assistants)/launch/set_simulation_timer.launch">
            <arg name="timeout" value="$(arg timeout)"/>
        </include>
    </group>
</launch>
